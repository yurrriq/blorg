#+OPTIONS: toc:nil ^:{}
#+BEGIN_HTML
---
title:  "lfe-rebar3/compile updates"
author: Eric Bailey
---
#+END_HTML

Since much of my time these days is spent ~(or 'writing 'developing
'evangelizing)~ [[http://lfe.io][LFE]], it should come as no surprise that I use the [[https://github.com/lfe-rebar3/compile][rebar3
compiler plugin]] extensively. In doing so, I noticed it always recompiles every
=.lfe= file it finds, irrespective of the staleness of the corresponding =.beam=
file. Having [[https://www.rebar3.org/docs/basic-usage#building][compiled]] a fair amount of vanilla Erlang via =rebar3=, I knew it
didn't have to be that way.

To further my quest, [[https://github.com/tsloughter][tristan__]] pointed me to [[https://github.com/rebar/rebar3/blob/beta-4/src/rebar_base_compiler.erl#L45-L48][run/7]], specifically its use of
~[check_last_mod]~. Before I [[https://github.com/quasiquoting/lfe-compile][forked]] [[https://github.com/lfe-rebar3/compile][lfe-rebar3/compile]], it was using [[https://github.com/rebar/rebar3/blob/beta-4/src/rebar_base_compiler.erl#L41-L43][run/4]],
which does *NOT* make use of ~[check_last_mod]~, hence the unnecessary
recompilation.

[[https://github.com/lfe-rebar3/compile/blob/0.2.1/src/lr3_comp.erl#L74][lfe-rebar3/compile/src/lr3_comp.erl:74]]
#+BEGIN_SRC erlang
rebar_base_compiler:run(Opts, [], Files, DoCompile).
#+END_SRC

After some experimentation, and [[https://www.rebar3.org/docs/dependencies#checkout-dependencies][_checkouts]] symlinking tricks, I came up with an
appropriate ~run/7~ incantation and made [[https://github.com/lfe-rebar3/compile/pull/5][a pull request]].

[[https://github.com/quasiquoting/lfe-compile/blob/0.3.0/src/lr3_comp.erl#L37-L39][quasiquoting/lfe-compile/src/lr3_comp.erl:37-39]]
#+BEGIN_SRC erlang
rebar_base_compiler:run(Config, FirstFiles,
                        SourceDir, ".lfe", TargetDir, ".beam",
                        fun compile/3).
#+END_SRC

With those changes, ~rebar3 lfe compile~ will now skip unmodified =.lfe=
files. Not only is this The Right Thingâ„¢ to do, but it should be [[https://xkcd.com/1205/][time saver]] in
the long run.

Here's an example of the difference when compiling [[https://github.com/quasiquoting/lodox][Lodox]]...

... using ~run/4~ via [[https://github.com/lfe-rebar3/compile/releases/tag/0.2.1][0.2.1]]:
#+BEGIN_SRC bash
$ time rebar3 lfe compile
#+END_SRC
#+BEGIN_EXAMPLE
 ~~>    Compiling ./src/lodox-html-writer.lfe ...
 ~~>    Compiling ./src/lodox-p.lfe ...
 ~~>    Compiling ./src/lodox-parse.lfe ...
 ~~>    Compiling ./src/lodox-util.lfe ...
 ~~>    Compiling ./src/lodox.lfe ...
 ~~>    Compiling ./src/pandoc.lfe ...
 ~~>    Compiling ./test/unit-lodox-tests.lfe ...
        1.39 real         1.14 user         0.24 sys
#+END_EXAMPLE

... using ~run/7~ via [[https://github.com/quasiquoting/lfe-compile/releases/tag/0.3.0][0.3.0]]:
#+BEGIN_SRC bash
$ time rebar3 lfe compile
#+END_SRC
#+BEGIN_EXAMPLE
        0.94 real         0.73 user         0.20 sys
#+END_EXAMPLE

A little more :cow::poop: microbenchmarking on a proprietary work project:
#+BEGIN_SRC bash
# run/4
        3.58 real         3.02 user         0.58 sys

# run/7
        1.83 real         1.46 user         0.35 sys
#+END_SRC
