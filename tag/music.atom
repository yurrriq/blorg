<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>blorg.ericb.me - music</title>
    <link href="https://blorg.ericb.me/tag/music.atom" rel="self" />
    <link href="https://blorg.ericb.me" />
    <id>https://blorg.ericb.me/tag/music.atom</id>
    <author>
        <name>Eric Bailey</name>
        <email>eric@ericb.me</email>
    </author>
    <updated>2014-12-07T00:00:00Z</updated>
    <entry>
    <title>(define the-dream (+ 'scheme 'lilypond))</title>
    <link href="https://blorg.ericb.me/2014/12/the-dream-scheme-lilypond/index.html" />
    <id>https://blorg.ericb.me/2014/12/the-dream-scheme-lilypond/index.html</id>
    <published>2014-12-07T00:00:00Z</published>
    <updated>2014-12-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-posted-on-date" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-posted-on-date" class="margin-toggle"/>
    <span class="marginnote">
      Posted on  7 December, 2014
    </span>
  </p>
  <p>
    <span class="marginnote">
      
      Tags: <a href="/tag/lilypond/index.html">lilypond</a>, <a href="/tag/scheme/index.html">scheme</a>, <a href="/tag/music/index.html">music</a>
      
    </span>
  </p>
</section>
<section>
  <p>
<img src="/images/the-dream-scheme-lilypond.png" alt="nil" />
</p>

<p>
Lately I've gotten increasingly obsessed with <a href="http://www.paulgraham.com/lisphistory.html">Lisp family of programming
languages</a> and am determined to write as little non-Lisp code as possible.
</p>

<p>
As such, I've started experimenting with writing more <a href="http://www.lilypond.org/doc/v2.19/Documentation/extending/scheme-in-lilypond">Scheme in Lilypond</a>. This
is an entirely impractical example, but it gives a glimpse of what's possible. I
can't wait to start <a href="http://www.gnu.org/software/guile/manual/guile.html#List-Mapping"><code>map</code>-ping</a> lists of musical expressions and <a href="http://lilypondblog.org/2014/07/trees-music-and-lilypond/">representing
music as trees</a>.
</p>

<p>
<b>Note to self</b>: Dive deeper into <a href="http://lilypondblog.org/2014/03/music-functions-1-getting-to-grips-with-scheme-in-lilypond/">these</a> <a href="http://lilypondblog.org/2014/03/music-functions-2-start-doing-something-useful/">pertinent</a> <a href="http://lilypondblog.org/2014/04/music-functions-3-reusing-code/">blog</a> <a href="http://lilypondblog.org/2014/04/music-functions-4-recursion/">posts</a> ASAP.
</p>

<div id="outline-container-orgf6f0ad1" class="outline-2">
<h2 id="orgf6f0ad1"><a href="https://github.com/yurrriq/blorg/tree/master/code/the_dream.scm"><code>the_dream.scm</code></a></h2>
<div class="outline-text-2" id="text-orgf6f0ad1">
<div class="org-src-container">
<pre class="src src-scheme">(<span style="color: #8ac6f2; font-weight: bold;">define</span> <span style="color: #cae682;">riffs</span>
  (make-hash-table 4))

(hashq-set!
  riffs 'I
  #{
    \mark \markup { I }
    f4 a c d <span style="color: #95e454;">| f d c a |</span>
    f4 a c d <span style="color: #95e454;">| ees d c b |</span>
    #})

(hashq-set!
  riffs 'IV
  #{
    \mark \markup { IV }
    bes4 d f g <span style="color: #95e454;">| bes g f d |</span>
    #})

(hashq-set!
  riffs 'I'
  #{
    \mark \markup { <span style="color: #95e454;">"I'"</span> }
    f,4 a c d <span style="color: #95e454;">| f d c a |</span>
    #})

(hashq-set!
  riffs 'V
  #{
    \mark \markup { V }
    g a bes b <span style="color: #95e454;">| c bes a g |</span>
    #})

(hashq-set!
  riffs 'turnaround
  #{
    f4 f aes aes <span style="color: #95e454;">| g g ges c |</span>
    #})
</pre>
</div>
</div>
</div>

<div id="outline-container-org99a183e" class="outline-2">
<h2 id="org99a183e"><a href="https://github.com/yurrriq/blorg/tree/master/code/the_dream.ly"><code>the_dream.ly</code></a></h2>
<div class="outline-text-2" id="text-org99a183e">
<div class="org-src-container">
<pre class="src src-lilypond">\version "&lt;&lt;lilypond-version()&gt;&gt;"
\include "lilypond-book-preamble.ly"
\paper { oddFooterMarkup = ##f }

#(load "the_dream.scm")

\score {
  \relative c' {
    #(hashq-ref riffs 'I)
    \break
    #(hashq-ref riffs 'IV)
    #(hashq-ref riffs 'I')
    \break
    #(hashq-ref riffs 'V)
    #(hashq-ref riffs 'turnaround)
    \bar "|."
  }
  \layout { indent = 0 }
}
</pre>
</div>

<p>
N.B. This LilyPond code doesn't require version <code>2.19.x</code>, so feel free to change
it to <code>2.18.x</code> if you're not <a href="http://lilypond.org/development.html">living on the edge</a>.
</p>
</div>
</div>

<div id="outline-container-orgee5129b" class="outline-2">
<h2 id="orgee5129b">Generate the PNG</h2>
<div class="outline-text-2" id="text-orgee5129b">
<div class="org-src-container">
<pre class="src src-sh" id="org7793541">lilypond --png -dresolution=200 -o output the_dream
</pre>
</div>

<div class="org-src-container">
<pre class="src src-sh" id="org18c74d6">mv output.png ../img/the-dream-scheme-lilypond.png
</pre>
</div>

<div class="org-src-container">
<pre class="src src-sh" id="org83ce953">rm output*.{eps,count,tex*}
</pre>
</div>

<div class="org-src-container">
<pre class="src src-sh" id="org32c1dc3">&lt;&lt;generate-png&gt;&gt;
&lt;&lt;move-output&gt;&gt;
<span style="color: #ffff00; font-weight: bold;">&lt;&lt;cleanup&gt;&gt;</span>
</pre>
</div>
</div>
</div>

</section>
]]></summary>
</entry>

</feed>
