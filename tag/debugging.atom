<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>blorg.ericb.me - debugging</title>
    <link href="http://blorg.ericb.me/tag/debugging.atom" rel="self" />
    <link href="http://blorg.ericb.me" />
    <id>http://blorg.ericb.me/tag/debugging.atom</id>
    <author>
        <name>Eric Bailey</name>
        <email>eric@ericb.me</email>
    </author>
    <updated>2016-04-12T00:00:00Z</updated>
    <entry>
    <title>Tracing LFE Functions</title>
    <link href="http://blorg.ericb.me/2016/04/tracing-lfe-functions/index.html" />
    <id>http://blorg.ericb.me/2016/04/tracing-lfe-functions/index.html</id>
    <published>2016-04-12T00:00:00Z</published>
    <updated>2016-04-12T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
  Posted on 12 April, 2016
  
    by Eric Bailey
  
</div>

<div class="info">
  
  Tags: <a href="/tag/lfe/index.html">lfe</a>, <a href="/tag/lisp/index.html">lisp</a>, <a href="/tag/beam/index.html">beam</a>, <a href="/tag/tracing/index.html">tracing</a>, <a href="/tag/debugging/index.html">debugging</a>
  
</div>

<p>
What follows is an LFE translation of Roberto Aloi's <a href="https://aloiroberto.wordpress.com/2009/02/23/tracing-erlang-functions/"><i>Tracing Erlang Functions</i></a>.
</p>

<p>
Tracing LFE functions for debugging purposes is quite simple.
</p>

<p>
Let's say you have the following module and want to trace one of its functions.
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="math">(defmodule maths
  (export (sum 2) (diff 2)))

(defun sum (a b) (+ a b))

(defun diff (a b) (- a b))
</pre>
</div>

<p>
Before we get started, make sure you compile the <code>maths</code> module:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="compile-maths">(c "/path/to/maths.lfe")
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">(#(module maths))
</pre>
</div>

<p>
Just start the tracer:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="start-the-tracer">(dbg:tracer)
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">#(ok &lt;0.46.0&gt;)
</pre>
</div>

<p>
Tell the tracer you are interested in all calls for all processes:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="all-calls-for-all-processes">(dbg:p 'all 'c)
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">#(ok (#(matched nonode@nohost 26)))
</pre>
</div>

<p>
Finally, tell it you want to trace the function, <code>sum</code>, from the <code>maths</code> module:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="trace-maths:sum/2">(dbg:tpl 'maths 'sum [])
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">#(ok (#(matched nonode@nohost 1)))
</pre>
</div>

<p>
Now, try to call the function, as usual. The tracer is active!
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="call-maths:sum/2">(maths:sum 2 3)
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">5
(&lt;0.29.0&gt;) call maths:sum(2,3)
</pre>
</div>

<p>
To trace all functions from the <code>maths</code> module:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="trace-all-functions-from-the-maths-module">&gt; (dbg:tpl 'maths [])
</pre>
</div>

<p>
To trace the return value for a given function:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="trace-return-values">(dbg:tpl 'maths 'sum (match-spec ([_] (return_trace))))
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">#(ok (#(matched nonode@nohost 1) #(saved 1)))
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe" id="return_trace-example">(maths:sum 19 23)
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">42
(&lt;0.56.0&gt;) call maths:sum(19,23)
(&lt;0.56.0&gt;) returned from maths:sum/2 -&gt; 42
</pre>
</div>

<p>
To stop the trace:
</p>
<div class="org-src-container">

<pre class="src src-lfe" id="stop-the-trace">(dbg:stop)
</pre>
</div>

<div class="org-src-container">

<pre class="src src-lfe">ok
</pre>
</div>

]]></summary>
</entry>

</feed>
