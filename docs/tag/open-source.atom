<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>blorg.ericb.me - open-source</title>
    <link href="https://blorg.ericb.me/tag/open-source.atom" rel="self" />
    <link href="https://blorg.ericb.me" />
    <id>https://blorg.ericb.me/tag/open-source.atom</id>
    <author>
        <name>Eric Bailey</name>
        <email>eric@ericb.me</email>
    </author>
    <updated>18 December, 2023</updated>
    <entry>
    <title>Bye Bye, Jekyll!</title>
    <link href="https://blorg.ericb.me/2016/05/bye-bye-jekyll/index.html" />
    <id>https://blorg.ericb.me/2016/05/bye-bye-jekyll/index.html</id>
    <published>2016-05-29T00:00:00Z</published>
    <updated>18 December, 2023</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-post-metadata" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-post-metadata" class="margin-toggle"/>
    <span class="marginnote">
      Written on 29 May, 2016
      
      <br />
      Updated on 18 December, 2023
      
      
      <br />
      Tags: <a title="All pages tagged &#39;blogging&#39;." href="/tag/blogging/index.html">blogging</a>, <a title="All pages tagged &#39;haskell&#39;." href="/tag/haskell/index.html">haskell</a>, <a title="All pages tagged &#39;open-source&#39;." href="/tag/open-source/index.html">open-source</a>
      
    </span>
  </p>
</section>
<section>
  <p>
Back in December of 2014, I set up a blog using <a href="https://ghost.org">Ghost</a> and <a href="https://github.com/axitkhurana/buster/">Buster</a>. That was all
fine and good, but left quite a bit to be desired. I'm not a Python user and the
whole workflow was a bit too clunky for my taste.
</p>

<section id="outline-container-orge0eb0f3" class="outline-2">
<h2 id="orge0eb0f3">Migrating to Jekyll</h2>
<div class="outline-text-2" id="text-orge0eb0f3">
<p>
In July of 2015, I decided to migrate to <a href="https://jekyllrb.com">Jekyll</a>. It's pretty widely used and the
integration with <a href="https://pages.github.com">GitHub Pages</a> promised to be smooth and easy.  In practice, I
found its workflow to be similarly annoying. Worst of all, it made me install,
write and use Ruby.<label for='mn-auto.3854819' class='margin-toggle'>&#8853;</label><input type='checkbox' id='mn-auto.3854819' class='margin-toggle'><span class='marginnote'> I'm a long-time Ruby hater. <a href="https://twitter.com/search?q=%2523sorrynotsorry">#sorrynotsorry</a> </span>
</p>

<p>
What's more, GitHub seems to have a predilection for breaking things so often
and dramatically, that <a href="https://github.com/lfex/dragon">dragon</a> was born.
</p>
</div>
</section>

<section id="outline-container-orgf8e57d4" class="outline-2">
<h2 id="orgf8e57d4">Migrating to Hakyll</h2>
<div class="outline-text-2" id="text-orgf8e57d4">
<p>
<a href="http://haskellbook.com">Learning Haskell</a> has been a <a href="https://www.youtube.com/watch?v=-1YjmXSyHa8">fantastic voyage</a>. Although I've not yet used it for
any "real" projects, I'm sold on its expressivity and general
mind-expanding-ness. I had seen <a href="https://jaspervdj.be/hakyll/">Hakyll</a> pop up on my radar a few times and
considered migrating to it for quite a while. Last night, I finally made the
leap. The experience was so great, I can't believe I didn't do it sooner.
</p>

<p>
From now on, my blog will be powered by <a href="https://jaspervdj.be/hakyll/">Hakyll</a>.
<label for="mn-dragon" class="margin-toggle"></label>
<input type="checkbox" id="mn-dragon" class="margin-toggle"/>
<span class="marginnote">
&#x2026; at least until <a href="https://github.com/lfex/dragon">dragon</a> matures, or I find an even better alternative.
</span>
</p>

<p>
You can find my <a href="https://github.com/yurrriq/blorg/blob/master/hakyll/site.hs"><code>site.hs</code></a>, which will undoubtedly grow and change over time, on
<a href="https://github.com/yurrriq/blorg">GitHub</a>.
</p>

<p>
Good riddance.
</p>
</div>
</section>

</section>
]]></summary>
</entry>
<entry>
    <title>lfe-rebar3/compile updates</title>
    <link href="https://blorg.ericb.me/2016/02/lfe-rebar3-compile-updates/index.html" />
    <id>https://blorg.ericb.me/2016/02/lfe-rebar3-compile-updates/index.html</id>
    <published>2016-02-11T00:00:00Z</published>
    <updated>18 December, 2023</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-post-metadata" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-post-metadata" class="margin-toggle"/>
    <span class="marginnote">
      Written on 11 February, 2016
      
      <br />
      Updated on 18 December, 2023
      
      
      <br />
      Tags: <a title="All pages tagged &#39;lfe&#39;." href="/tag/lfe/index.html">lfe</a>, <a title="All pages tagged &#39;lisp&#39;." href="/tag/lisp/index.html">lisp</a>, <a title="All pages tagged &#39;erlang&#39;." href="/tag/erlang/index.html">erlang</a>, <a title="All pages tagged &#39;beam&#39;." href="/tag/beam/index.html">beam</a>, <a title="All pages tagged &#39;rebar3&#39;." href="/tag/rebar3/index.html">rebar3</a>, <a title="All pages tagged &#39;tooling&#39;." href="/tag/tooling/index.html">tooling</a>, <a title="All pages tagged &#39;open-source&#39;." href="/tag/open-source/index.html">open-source</a>
      
    </span>
  </p>
</section>
<section>
  <p>
Since much of my time these days is spent <code class="src src-lfe">(or 'writing 'developing 'evangelizing)</code> <a href="http://lfe.io">LFE</a>, it should come as no surprise that I use the <a href="https://github.com/lfe-rebar3/compile">rebar3
compiler plugin</a> extensively. In doing so, I noticed it always recompiles every
<code>.lfe</code> file it finds, irrespective of the staleness of the corresponding <code>.beam</code>
file. Having <a href="https://www.rebar3.org/docs/basic-usage#building">compiled</a> a fair amount of vanilla Erlang via <code>rebar3</code>, I knew it
didn't have to be that way.
</p>

<section id="outline-container-org0c861a3" class="outline-2">
<h2 id="org0c861a3">Replacing <code>run/4</code> with <code>run/7</code></h2>
<div class="outline-text-2" id="text-org0c861a3">
<p>
To further my quest, <a href="https://github.com/tsloughter">Tristan</a> pointed me to <a href="https://github.com/rebar/rebar3/blob/beta-4/src/rebar_base_compiler.erl#L45-L48">run/7</a>, specifically its use of
<code class="src src-erlang">[check_last_mod]</code>. Before I <a href="https://github.com/quasiquoting/lfe-compile">forked</a> <a href="https://github.com/lfe-rebar3/compile">lfe-rebar3/compile</a>, it was using
<a href="https://github.com/rebar/rebar3/blob/beta-4/src/rebar_base_compiler.erl#L41-L43">run/4</a>, which does <b>NOT</b> make use of <code class="src src-erlang">[check_last_mod]</code>, hence the
unnecessary recompilation.
</p>

<p>
<a href="https://github.com/lfe-rebar3/compile/blob/0.2.1/src/lr3_comp.erl#L74">lfe-rebar3/compile/src/lr3_comp.erl:74</a>
</p>
<div class="org-src-container">
<pre class="src src-erlang"><span style="font-weight: bold; text-decoration: underline;">rebar_base_compiler</span>:<span style="font-weight: bold; text-decoration: underline;">run</span>(<span style="font-weight: bold; font-style: italic;">Opts</span>, [], <span style="font-weight: bold; font-style: italic;">Files</span>, <span style="font-weight: bold; font-style: italic;">DoCompile</span>).
</pre>
</div>

<p>
After some experimentation, and <a href="https://www.rebar3.org/docs/dependencies#checkout-dependencies">_checkouts</a> symlinking tricks, I came up with an
appropriate <code>run/7</code> incantation and made <a href="https://github.com/lfe-rebar3/compile/pull/5">a pull request</a>.
</p>

<p>
<a href="https://github.com/quasiquoting/lfe-compile/blob/0.3.0/src/lr3_comp.erl#L37-L39">quasiquoting/lfe-compile/src/lr3_comp.erl:37-39</a>
</p>
<div class="org-src-container">
<pre class="src src-erlang"><span style="font-weight: bold; text-decoration: underline;">rebar_base_compiler</span>:<span style="font-weight: bold; text-decoration: underline;">run</span>(<span style="font-weight: bold; font-style: italic;">Config</span>, <span style="font-weight: bold; font-style: italic;">FirstFiles</span>,
                        <span style="font-weight: bold; font-style: italic;">SourceDir</span>, <span style="font-style: italic;">".lfe"</span>, <span style="font-weight: bold; font-style: italic;">TargetDir</span>, <span style="font-style: italic;">".beam"</span>,
                        <span style="font-weight: bold;">fun</span> <span style="font-weight: bold; text-decoration: underline;">compile/3</span>).
</pre>
</div>

<p>
With those changes, <code>rebar3 lfe compile</code> will now skip unmodified <code>.lfe</code>
files. Not only is this The Right Thing™ to do, but it should be <a href="https://xkcd.com/1205/">time saver</a> in
the long run.
</p>
</div>
</section>

<section id="outline-container-orged159db" class="outline-2">
<h2 id="orged159db">Examples of time saving</h2>
<div class="outline-text-2" id="text-orged159db">
<p>
Here's an example of the difference when compiling <a href="https://github.com/quasiquoting/lodox">Lodox</a>&#x2026;
</p>

<p>
&#x2026; using <code>run/4</code> via <a href="https://github.com/lfe-rebar3/compile/releases/tag/0.2.1">0.2.1</a>:
</p>
<div class="org-src-container">
<pre class="src src-bash">$ time rebar3 lfe compile
</pre>
</div>
<pre class="example" id="org46544c6">
~~&gt;    Compiling ./src/lodox-html-writer.lfe ...
~~&gt;    Compiling ./src/lodox-p.lfe ...
~~&gt;    Compiling ./src/lodox-parse.lfe ...
~~&gt;    Compiling ./src/lodox-util.lfe ...
~~&gt;    Compiling ./src/lodox.lfe ...
~~&gt;    Compiling ./src/pandoc.lfe ...
~~&gt;    Compiling ./test/unit-lodox-tests.lfe ...
       1.39 real         1.14 user         0.24 sys
</pre>

<p>
&#x2026; using <code>run/7</code> via <a href="https://github.com/quasiquoting/lfe-compile/releases/tag/0.3.0">0.3.0</a>:
</p>
<div class="org-src-container">
<pre class="src src-bash">$ time rebar3 lfe compile
</pre>
</div>
<pre class="example" id="orgc4e6197">
0.94 real         0.73 user         0.20 sys
</pre>

<p>
A little more 🐄💩 microbenchmarking on a proprietary work project:
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="font-weight: bold; font-style: italic;"># </span><span style="font-weight: bold; font-style: italic;">run/4</span>
        3.58 real         3.02 user         0.58 sys
</pre>
</div>

<div class="org-src-container">
<pre class="src src-bash"><span style="font-weight: bold; font-style: italic;"># </span><span style="font-weight: bold; font-style: italic;">run/7</span>
        1.83 real         1.46 user         0.35 sys
</pre>
</div>
</div>
</section>

</section>
]]></summary>
</entry>
<entry>
    <title>Matching strings in LFE patterns</title>
    <link href="https://blorg.ericb.me/2015/12/matching-strings-in-lfe-patterns/index.html" />
    <id>https://blorg.ericb.me/2015/12/matching-strings-in-lfe-patterns/index.html</id>
    <published>2015-12-28T00:00:00Z</published>
    <updated>18 December, 2023</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-post-metadata" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-post-metadata" class="margin-toggle"/>
    <span class="marginnote">
      Written on 28 December, 2015
      
      <br />
      Updated on 18 December, 2023
      
      
      <br />
      Tags: <a title="All pages tagged &#39;lfe&#39;." href="/tag/lfe/index.html">lfe</a>, <a title="All pages tagged &#39;lisp&#39;." href="/tag/lisp/index.html">lisp</a>, <a title="All pages tagged &#39;beam&#39;." href="/tag/beam/index.html">beam</a>, <a title="All pages tagged &#39;pattern-matching&#39;." href="/tag/pattern-matching/index.html">pattern-matching</a>, <a title="All pages tagged &#39;open-source&#39;." href="/tag/open-source/index.html">open-source</a>
      
    </span>
  </p>
</section>
<section>
  <p>
While writing an LFE solution for <a href="https://adventofcode.com/2015/day/6">Day 6 of Advent of Code</a>, I found myself
wanting to write <code>parse_instruction/1</code> like this:
</p>
<div class="org-src-container">
<pre class="src src-erlang"><span style="font-weight: bold;">parse_instruction</span>(<span style="font-style: italic;">"toggle "</span> ++ <span style="font-weight: bold; font-style: italic;">Rest</span>) -&gt;<span style="font-weight: bold;"> </span><span style="font-weight: bold; text-decoration: underline;">toggle</span>(<span style="font-weight: bold; text-decoration: underline;">parse_coordinates</span>(<span style="font-weight: bold; font-style: italic;">Rest</span>));
<span style="font-weight: bold;">parse_instruction</span>(<span style="font-style: italic;">"turn on "</span> ++ <span style="font-weight: bold; font-style: italic;">Rest</span>) -&gt;<span style="font-weight: bold;"> </span><span style="font-weight: bold; text-decoration: underline;">turn_on</span>(<span style="font-weight: bold; text-decoration: underline;">parse_coordinates</span>(<span style="font-weight: bold; font-style: italic;">Rest</span>));
<span style="font-weight: bold;">parse_instruction</span>(<span style="font-style: italic;">"turn off "</span> ++ <span style="font-weight: bold; font-style: italic;">Rest</span>) -&gt;<span style="font-weight: bold;"> </span><span style="font-weight: bold; text-decoration: underline;">turn_off</span>(<span style="font-weight: bold; text-decoration: underline;">parse_coordinates</span>(<span style="font-weight: bold; font-style: italic;">Rest</span>)).

<span style="font-weight: bold;">parse_coordinates</span>(<span style="font-weight: bold; font-style: italic;">String</span>) -&gt;
  {ok,[<span style="font-weight: bold; font-style: italic;">X0</span>,<span style="font-weight: bold; font-style: italic;">Y0</span>,<span style="font-weight: bold; font-style: italic;">X1</span>,<span style="font-weight: bold; font-style: italic;">Y2</span>],[]} = <span style="font-weight: bold; text-decoration: underline;">io_lib</span>:<span style="font-weight: bold; text-decoration: underline;">fread</span>(<span style="font-style: italic;">"~d,~d through ~d,~d"</span>, <span style="font-weight: bold; font-style: italic;">String</span>),
  {{<span style="font-weight: bold; font-style: italic;">X0</span>,<span style="font-weight: bold; font-style: italic;">Y0</span>},{<span style="font-weight: bold; font-style: italic;">X1</span>,<span style="font-weight: bold; font-style: italic;">Y1</span>}}.

<span style="font-weight: bold;">toggle</span>({{<span style="font-weight: bold; font-style: italic;">X0</span>,<span style="font-weight: bold; font-style: italic;">Y0</span>},{<span style="font-weight: bold; font-style: italic;">X1</span>,<span style="font-weight: bold; font-style: italic;">Y1</span>}}) -&gt;<span style="font-weight: bold;"> </span>undefined.
<span style="font-weight: bold;">turn_on</span>({{<span style="font-weight: bold; font-style: italic;">X0</span>,<span style="font-weight: bold; font-style: italic;">Y0</span>},{<span style="font-weight: bold; font-style: italic;">X1</span>,<span style="font-weight: bold; font-style: italic;">Y1</span>}}) -&gt;<span style="font-weight: bold;"> </span>undefined.
<span style="font-weight: bold;">turn_off</span>({{<span style="font-weight: bold; font-style: italic;">X0</span>,<span style="font-weight: bold; font-style: italic;">Y0</span>},{<span style="font-weight: bold; font-style: italic;">X1</span>,<span style="font-weight: bold; font-style: italic;">Y1</span>}}) -&gt;<span style="font-weight: bold;"> </span>undefined.
</pre>
</div>

<section id="outline-container-org5794d3a" class="outline-2">
<h2 id="org5794d3a">Trying it out</h2>
<div class="outline-text-2" id="text-org5794d3a">
<p>
But the literal LFE translation <a href="https://github.com/rvirding/lfe/issues/176">doesn't work as desired</a>.
</p>
<div class="org-src-container">
<pre class="src src-lfe">(<span style="font-weight: bold;">defun</span> <span style="font-weight: bold;">parse-instruction</span>
  ([(<span style="font-weight: bold;">++</span> <span style="font-style: italic;">"turn off "</span> rest)]
   ...))
</pre>
</div>

<p>
<label for="mn-exp_append-before" class="margin-toggle">&#8853;</label>
<input type="checkbox" id="mn-exp_append-before" class="margin-toggle"/>
<span class="marginnote">
N.B. In <a href="https://github.com/rvirding/lfe/releases/tag/v0.10.1">v0.10.1</a>, <code>exp_append/1</code> had the following <a href="https://github.com/rvirding/lfe/blob/v0.10.1/src/lfe_macro.erl#L911-L912">clause</a>, commented out.<br/>
<code class="src src-erlang"><span style="font-weight: bold; font-style: italic;">%% </span><span style="font-weight: bold; font-style: italic;">Cases with lists of numbers (strings).</span></code><br/>
<code class="src src-erlang">[[<span style="font-weight: bold; font-style: italic;">N</span>|<span style="font-weight: bold; font-style: italic;">Ns</span>]|<span style="font-weight: bold; font-style: italic;">Es</span>] <span style="font-weight: bold;">when</span> <span style="font-weight: bold;">is_number</span>(<span style="font-weight: bold; font-style: italic;">N</span>) -&gt;<span style="font-weight: bold;"> </span>[cons,<span style="font-weight: bold; font-style: italic;">N</span>,[<span style="font-style: italic;">'++'</span>,<span style="font-weight: bold; font-style: italic;">Ns</span>|<span style="font-weight: bold; font-style: italic;">Es</span>]];</code>
</span>
</p>

<p>
Instead, invocation of a <code>defun</code> of that form throws a <code>function_clause</code> error.
</p>
<div class="org-src-container">
<pre class="src src-lfe">&gt; (<span style="font-weight: bold;">defun</span> <span style="font-weight: bold;">f</span> ([(<span style="font-weight: bold;">++</span> <span style="font-style: italic;">"prefix"</span> suffix)] suffix))
f
&gt; (f <span style="font-style: italic;">"prefixsuffix"</span>)
exception error: function_clause
</pre>
</div>
</div>
</section>

<section id="outline-container-org9f95e8e" class="outline-2">
<h2 id="org9f95e8e">Adding <code>++*</code> patterns to LFE</h2>
<div class="outline-text-2" id="text-org9f95e8e">
<p>
After this discovery, I took to <a href="http://webchat.freenode.net/?channels=erlang-lisp">#erlang-lisp</a> and tried to figure out why.
Discussing the issue with <code>@rvirding</code> for a few minutes, we decided adding <code>++*</code>
and having patterns like <code>(++* "prefix" suffix)</code> expand to nested <code>cons</code>-es was
a solid approach.
</p>

<p>
Rather than take the overly complicated approach of counting and limiting the
number of expanded <code>cons</code>-es and bottoming out to a call to <code>erlang:++</code>, we
decided to <a href="http://www.catb.org/jargon/html/K/KISS-Principle.html">keep it simple</a> and just let <code>++*</code> patterns do their own thing.
</p>

<p>
The <a href="https://github.com/rvirding/lfe/compare/b867573e9d144988b5bc70bfe00aa08b27b3a7d6...a5d7c23ebd3005d4f9ff8714d8e02f06aa2d6abe">solution</a> we came up with is as follows:
</p>
<div class="org-src-container">
<pre class="src src-erlang"><span style="font-weight: bold; font-style: italic;">%% </span><span style="font-weight: bold; font-style: italic;">exp_predef(...) -&gt; ...;</span>
<span style="font-weight: bold;">exp_predef</span>([<span style="font-style: italic;">'++*'</span>|<span style="font-weight: bold; font-style: italic;">Abody</span>], <span style="font-weight: bold; font-style: italic;">_</span>, <span style="font-weight: bold; font-style: italic;">St</span>) -&gt;
  <span style="font-weight: bold; font-style: italic;">Exp</span> = <span style="font-weight: bold; text-decoration: underline;">exp_prefix</span>(<span style="font-weight: bold; font-style: italic;">Abody</span>),
  {yes,<span style="font-weight: bold; font-style: italic;">Exp</span>,<span style="font-weight: bold; font-style: italic;">St</span>};
<span style="font-weight: bold; font-style: italic;">%% </span><span style="font-weight: bold; font-style: italic;">exp_predef(...) -&gt; ....</span>

<span style="font-weight: bold;">exp_prefix</span>([[<span style="font-weight: bold; font-style: italic;">N</span>|<span style="font-weight: bold; font-style: italic;">Ns</span>]|<span style="font-weight: bold; font-style: italic;">Es</span>]) <span style="font-weight: bold;">when</span> <span style="font-weight: bold;">is_number</span>(<span style="font-weight: bold; font-style: italic;">N</span>) -&gt;<span style="font-weight: bold;"> </span>[cons,<span style="font-weight: bold; font-style: italic;">N</span>,[<span style="font-style: italic;">'++*'</span>,<span style="font-weight: bold; font-style: italic;">Ns</span>|<span style="font-weight: bold; font-style: italic;">Es</span>]];
<span style="font-weight: bold;">exp_prefix</span>([[]|<span style="font-weight: bold; font-style: italic;">Es</span>]) -&gt;<span style="font-weight: bold;"> </span>[<span style="font-style: italic;">'++*'</span>|<span style="font-weight: bold; font-style: italic;">Es</span>];
<span style="font-weight: bold;">exp_prefix</span>(<span style="font-weight: bold; font-style: italic;">Args</span>) -&gt;<span style="font-weight: bold;"> </span><span style="font-weight: bold; text-decoration: underline;">exp_append</span>(<span style="font-weight: bold; font-style: italic;">Args</span>).
</pre>
</div>
</div>
</section>

<section id="outline-container-orgb192477" class="outline-2">
<h2 id="orgb192477">Usage</h2>
<div class="outline-text-2" id="text-orgb192477">
<p>
Now in the <a href="https://github.com/rvirding/lfe/tree/develop">develop</a> branch, you can do the following:
</p>
<div class="org-src-container">
<pre class="src src-lfe">&gt; (<span style="font-weight: bold;">defun</span> <span style="font-weight: bold;">f</span> ([(<span style="font-weight: bold;">++*</span> <span style="font-style: italic;">"prefix"</span> suffix)] suffix))
f
&gt; (f <span style="font-style: italic;">"prefixsuffix"</span>)
<span style="font-style: italic;">"suffix"</span>
</pre>
</div>

<p>
or even:
</p>
<div class="org-src-container">
<pre class="src src-lfe">&gt; (<span style="font-weight: bold;">defun</span> <span style="font-weight: bold;">f</span> ([(<span style="font-weight: bold;">++*</span> <span style="font-style: italic;">"p"</span> <span style="font-style: italic;">"r"</span> <span style="font-style: italic;">"e"</span> <span style="font-style: italic;">"f"</span> <span style="font-style: italic;">"i"</span> <span style="font-style: italic;">"x"</span> suffix)] suffix))
f
&gt; (f <span style="font-style: italic;">"prefixsuffix"</span>)
<span style="font-style: italic;">"suffix"</span>
</pre>
</div>
</div>
</section>

</section>
]]></summary>
</entry>
<entry>
    <title>Lisp Flavoured Erlang and Pynchon, oh my!</title>
    <link href="https://blorg.ericb.me/2015/08/lfe-and-pynchon/index.html" />
    <id>https://blorg.ericb.me/2015/08/lfe-and-pynchon/index.html</id>
    <published>2015-08-06T00:00:00Z</published>
    <updated>16 December, 2023</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-post-metadata" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-post-metadata" class="margin-toggle"/>
    <span class="marginnote">
      Written on  6 August, 2015
      
      <br />
      Updated on 16 December, 2023
      
      
      <br />
      Tags: <a title="All pages tagged &#39;lfe&#39;." href="/tag/lfe/index.html">lfe</a>, <a title="All pages tagged &#39;lisp&#39;." href="/tag/lisp/index.html">lisp</a>, <a title="All pages tagged &#39;beam&#39;." href="/tag/beam/index.html">beam</a>, <a title="All pages tagged &#39;metaprogramming&#39;." href="/tag/metaprogramming/index.html">metaprogramming</a>, <a title="All pages tagged &#39;open-source&#39;." href="/tag/open-source/index.html">open-source</a>
      
    </span>
  </p>
</section>
<section>
  <p>
So, lately I've been getting increasingly into <a href="https://lfe.io">Lisp Flavoured Erlang (LFE)</a>.  If
you haven't tried it yet, or even if you have, check out the <a href="https://exercism.org/docs/tracks/lfe/">Exercism LFE track</a>
I helped organize.  My latest endeavour is porting Robert Levy's <a href="https://github.com/rplevy/swiss-arrows">swiss-arrows</a>
from Clojure to LFE.  It's been going well so far, despite having to rename it
to <a href="https://github.com/quasiquoting/pynchon">pynchon</a>, since Erlang wasn't down with the hyphenated name and a few people
on the <a href="https://groups.google.com/forum/#!aboutgroup/lisp-flavoured-erlang">LFE Google group</a> suggested it.
</p>

<section id="outline-container-org252f65a" class="outline-2">
<h2 id="org252f65a">Example</h2>
<div class="outline-text-2" id="text-org252f65a">
<p>
Without further ado, here's a contrived example.
<label for='mn-auto.4626400' class='margin-toggle'>&#8853;</label><input type='checkbox' id='mn-auto.4626400' class='margin-toggle'><span class='marginnote'> <code>#'compose/2</code> comes from Duncan McGreggor's <a href="https://github.com/lfex/clj">clj</a>, Clojure functions and macros for LFE, which has since been <a href="https://github.com/lfe/lfe/pull/267">merged into LFE</a>. </span>
</p>

<div class="org-src-container">
<pre class="src src-lfe">(-&lt;&gt; <span style="font-style: italic;">"testing"</span>
     (-!&lt;&gt;&gt; (string:substr &lt;&gt; 1 4)
            (lists:duplicate 3)
            (compose #'list/1 #'lists:flatten/1)
            (lfe_io:format '<span style="font-style: italic;">"non-updating: ~p\n"</span>))
     (string:substr 5)
     (<span style="font-weight: bold;">++</span> <span style="font-style: italic;">"winn"</span> &lt;&gt;))
</pre>
</div>

<p>
The wild-looking form above expands to something more like the following.
</p>
<div class="org-src-container">
<pre class="src src-lfe">(-&lt;&gt;
 (<span style="font-weight: bold;">progn</span>
   (lfe_io:format
    '<span style="font-style: italic;">"non-updating: ~p\n"</span>
    (<span style="font-weight: bold;">list</span>
     (lists:flatten
      (lists:duplicate 3 (string:substr <span style="font-style: italic;">"testing"</span> 1 4)))))
   <span style="font-style: italic;">"testing"</span>)
 (string:substr 5)
 (<span style="font-weight: bold;">++</span> <span style="font-style: italic;">"winn"</span> &lt;&gt;))
</pre>
</div>

<p>
After that, it becomes apparent the "return track" is rather simple.
</p>
<div class="org-src-container">
<pre class="src src-lfe">(<span style="font-weight: bold;">++</span> <span style="font-style: italic;">"winn"</span> (string:substr 5 <span style="font-style: italic;">"testing"</span>))
</pre>
</div>

<div class="org-src-container">
<pre class="src src-lfe">&gt; (-&lt;&gt; <span style="font-style: italic;">"testing"</span>
       (-!&lt;&gt;&gt; (string:substr &lt;&gt; 1 4)
              (lists:duplicate 3)
              (compose #'list/1 #'lists:flatten/1)
              (lfe_io:format '<span style="font-style: italic;">"non-updating: ~p\n"</span>))
       (string:substr 5)
       (<span style="font-weight: bold;">++</span> <span style="font-style: italic;">"winn"</span> &lt;&gt;))
non-updating: <span style="font-style: italic;">"testtesttest"</span> <span style="font-weight: bold; font-style: italic;">; printed</span>
<span style="font-style: italic;">"winning"</span>                    <span style="font-weight: bold; font-style: italic;">; returned</span>
</pre>
</div>
</div>
</section>

</section>
]]></summary>
</entry>
<entry>
    <title>ip.ericb.me</title>
    <link href="https://blorg.ericb.me/2015/07/ip.ericb.me/index.html" />
    <id>https://blorg.ericb.me/2015/07/ip.ericb.me/index.html</id>
    <published>2015-07-13T00:00:00Z</published>
    <updated>18 December, 2023</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-post-metadata" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-post-metadata" class="margin-toggle"/>
    <span class="marginnote">
      Written on 13 July, 2015
      
      <br />
      Updated on 18 December, 2023
      
      
      <br />
      Tags: <a title="All pages tagged &#39;hack&#39;." href="/tag/hack/index.html">hack</a>, <a title="All pages tagged &#39;clojure&#39;." href="/tag/clojure/index.html">clojure</a>, <a title="All pages tagged &#39;web-service&#39;." href="/tag/web-service/index.html">web-service</a>, <a title="All pages tagged &#39;open-source&#39;." href="/tag/open-source/index.html">open-source</a>
      
    </span>
  </p>
</section>
<section>
  <p>
As an exercise, I've written <a href="https://github.com/yurrriq/what-is-my-ip">my own IP echo service</a>
<del>and am running it at <a href="http://ip.ericb.me">ip.ericb.me</a></del>.
</p>

<p>
Its <a href="https://github.com/yurrriq/what-is-my-ip/blob/master/src/me/ericb/what_is_my_ip/core.clj">excruciatingly simple Clojure source</a> looks something like the following.
</p>

<div class="org-src-container">
<pre class="src src-clojure">(defroutes app
  (GET <span style="font-style: italic;">"/"</span> {{x-real-ip <span style="font-style: italic;">"x-real-ip"</span>} <span style="font-weight: bold; text-decoration: underline;">:headers</span>}
    {<span style="font-weight: bold; text-decoration: underline;">:status</span>  200
     <span style="font-weight: bold; text-decoration: underline;">:headers</span> {<span style="font-style: italic;">"Content-Type"</span> <span style="font-style: italic;">"text/plain"</span>}
     <span style="font-weight: bold; text-decoration: underline;">:body</span>    x-real-ip}))

(<span style="font-weight: bold;">defn</span> <span style="font-weight: bold;">-main</span> [&amp; args]
  (<span style="font-weight: bold;">-&gt;&gt;</span> (<span style="font-weight: bold;">or</span> (<span style="font-weight: bold;">some-&gt;</span> (env <span style="font-weight: bold; text-decoration: underline;">:port</span>) (<span style="font-weight: bold; text-decoration: underline;">Integer</span>/parseInt)) 5000)
       (hash-map <span style="font-weight: bold; text-decoration: underline;">:port</span>)
       (run-server app)))
</pre>
</div>

</section>
]]></summary>
</entry>

</feed>
