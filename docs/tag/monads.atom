<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>blorg.ericb.me - monads</title>
    <link href="https://blorg.ericb.me/tag/monads.atom" rel="self" />
    <link href="https://blorg.ericb.me" />
    <id>https://blorg.ericb.me/tag/monads.atom</id>
    <author>
        <name>Eric Bailey</name>
        <email>eric@ericb.me</email>
    </author>
    <updated>18 December, 2023</updated>
    <entry>
    <title>Monadic Vectors</title>
    <link href="https://blorg.ericb.me/2023/12/monadic-vectors/index.html" />
    <id>https://blorg.ericb.me/2023/12/monadic-vectors/index.html</id>
    <published>2023-12-02T00:00:00Z</published>
    <updated>18 December, 2023</updated>
    <summary type="html"><![CDATA[
<p class="subtitle">Eric Bailey</p>

<section>
  <p>
    <label for="mn-post-metadata" class="margin-toggle">&#8853;</label>
    <input type="checkbox" id="mn-post-metadata" class="margin-toggle"/>
    <span class="marginnote">
      Written on  2 December, 2023
      
      <br />
      Updated on 18 December, 2023
      
      
      <br />
      Tags: <a title="All pages tagged &#39;haskell&#39;." href="/tag/haskell/index.html">haskell</a>, <a title="All pages tagged &#39;monads&#39;." href="/tag/monads/index.html">monads</a>, <a title="All pages tagged &#39;mathematics&#39;." href="/tag/mathematics/index.html">mathematics</a>, <a title="All pages tagged &#39;algebra&#39;." href="/tag/algebra/index.html">algebra</a>
      
    </span>
  </p>
</section>
<section>
  <p>
<a href="https://hackage.haskell.org/package/linear-1.22/docs/src/Linear.V3.html#line-106">The <code>Functor</code> instance</a> for <a href="https://hackage.haskell.org/package/linear-1.22/docs/Linear-V3.html">3-dimensional vectors</a> applies a function <code>f</code> to each
basis vector, preserving the structure of the 3-D vector.
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="org922d0bf"><span style="color: #8ac6f2; font-weight: bold;">instance</span> <span style="color: #92a65e; font-weight: bold;">Functor</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8ac6f2; font-weight: bold;">where</span>
  fmap f <span style="color: #8c8c8c;">(</span><span style="color: #92a65e; font-weight: bold;">V3</span> a b c<span style="color: #8c8c8c;">)</span> <span style="color: #cae682;">=</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8c8c8c;">(</span>f a<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span>f b<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span>f c<span style="color: #8c8c8c;">)</span>
  a <span style="color: #cae682;">&lt;$</span> <span style="color: #8ac6f2; font-weight: bold;">_</span> <span style="color: #cae682;">=</span> <span style="color: #92a65e; font-weight: bold;">V3</span> a a a
</pre>
</div>

<div class="org-src-container">
<pre class="src src-haskell" id="org45282a4">&#955;<span style="color: #cae682;">&gt;</span> fmap <span style="color: #8c8c8c;">(</span><span style="color: #cae682;">+</span>1<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span><span style="color: #92a65e; font-weight: bold;">V3</span> 1 2 3<span style="color: #8c8c8c;">)</span>
<span style="color: #92a65e; font-weight: bold;">V3</span> 2 3 4
</pre>
</div>

<p>
<a href="https://hackage.haskell.org/package/linear-1.22/docs/src/Linear.V3.html#line-148">The <code>Applicative</code> instance</a> provides operations to embed pure expressions
(<a href="https://hackage.haskell.org/package/base-4.19.0.0/docs/Prelude.html#v:pure"><code>pure</code></a>), and sequence computations and combine their results (<a href="https://hackage.haskell.org/package/base-4.19.0.0/docs/Prelude.html#v:-60--42--62-"><code>&lt;*&gt;</code></a> and
<a href="https://hackage.haskell.org/package/base-4.19.0.0/docs/Prelude.html#v:liftA2"><code>liftA2</code></a>).
<label for='mn-auto.5248061' class='margin-toggle'>&#8853;</label><input type='checkbox' id='mn-auto.5248061' class='margin-toggle'><span class='marginnote'> N.B. The default definition is:<br> </span>
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="orgf94cc07"><span style="color: #8ac6f2; font-weight: bold;">instance</span> <span style="color: #92a65e; font-weight: bold;">Applicative</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8ac6f2; font-weight: bold;">where</span>
  pure a <span style="color: #cae682;">=</span> <span style="color: #92a65e; font-weight: bold;">V3</span> a a a
  <span style="color: #92a65e; font-weight: bold;">V3</span> a b c <span style="color: #cae682;">&lt;*&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> d e f <span style="color: #cae682;">=</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8c8c8c;">(</span>a d<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span>b e<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span>c f<span style="color: #8c8c8c;">)</span>
</pre>
</div>

<div class="org-src-container">
<pre class="src src-haskell" id="orgabd2f39">&#955;<span style="color: #cae682;">&gt;</span> pure 0 <span style="color: #cae682;">::</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #92a65e; font-weight: bold;">Int</span>
<span style="color: #92a65e; font-weight: bold;">V3</span> 0 0 0
&#955;<span style="color: #cae682;">&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8c8c8c;">(</span><span style="color: #cae682;">+</span>5<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span><span style="color: #cae682;">+</span>3<span style="color: #8c8c8c;">)</span> <span style="color: #8c8c8c;">(</span><span style="color: #cae682;">+</span>1<span style="color: #8c8c8c;">)</span> <span style="color: #cae682;">&lt;*&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> 1 2 3
<span style="color: #92a65e; font-weight: bold;">V3</span> 6 5 4
</pre>
</div>

<p>
Together they enable applying a binary function as follows.
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="org794a1ed">&#955;<span style="color: #cae682;">&gt;</span> <span style="color: #8c8c8c;">(</span><span style="color: #cae682;">+</span><span style="color: #8c8c8c;">)</span> <span style="color: #cae682;">&lt;$&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> 1 2 3 <span style="color: #cae682;">&lt;*&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> 4 5 6
<span style="color: #92a65e; font-weight: bold;">V3</span> 5 7 9
</pre>
</div>

<p>
There's also a <a href="https://hackage.haskell.org/package/linear-1.22/docs/src/Linear.V3.html#line-169"><code>Monad</code> instance</a>, which enables concise and elegant code.
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="org1408954"><span style="color: #8ac6f2; font-weight: bold;">instance</span> <span style="color: #92a65e; font-weight: bold;">Monad</span> <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8ac6f2; font-weight: bold;">where</span>
  <span style="color: #92a65e; font-weight: bold;">V3</span> a b c <span style="color: #cae682;">&gt;&gt;=</span> f <span style="color: #cae682;">=</span> <span style="color: #92a65e; font-weight: bold;">V3</span> a' b' c' <span style="color: #8ac6f2; font-weight: bold;">where</span>
    <span style="color: #92a65e; font-weight: bold;">V3</span> a' <span style="color: #8ac6f2; font-weight: bold;">_</span> <span style="color: #8ac6f2; font-weight: bold;">_</span> <span style="color: #cae682;">=</span> f a
    <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8ac6f2; font-weight: bold;">_</span> b' <span style="color: #8ac6f2; font-weight: bold;">_</span> <span style="color: #cae682;">=</span> f b
    <span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #8ac6f2; font-weight: bold;">_</span> <span style="color: #8ac6f2; font-weight: bold;">_</span> c' <span style="color: #cae682;">=</span> f c
</pre>
</div>

<p>
For example, as part of <a href="https://adventofcode.com/2023/day/2">the Advent of Code puzzle for Day 2 of 2023</a>, one must
parse revelations of the form <code>N COLOR</code> where <code>N</code> is a <a href="https://hackage.haskell.org/package/parsers-0.12.11/docs/Text-Parser-Token.html#v:natural"><code>natural</code> number</a> and
<code>COLOR</code> is one of <code>red</code>, <code>green</code>, and <code>blue</code>. The tricolor nature of the
revelations (and the subsequent computations therewith) lends itself nicely to
<a href="https://hackage.haskell.org/package/linear-1.22/docs/Linear-V3.html#t:V3">3-dimensional vectors</a>.
</p>

<p>
A naive <a href="https://hackage.haskell.org/package/trifecta-2.1.3/docs/Text-Trifecta-Parser.html#t:Parser"><code>Parser</code></a> might look as follows.
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="org434824d"><span style="color: #cae682;">revelation</span> <span style="color: #cae682;">::</span> <span style="color: #92a65e; font-weight: bold;">Parser</span> <span style="color: #8c8c8c;">(</span><span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #92a65e; font-weight: bold;">Integer</span><span style="color: #8c8c8c;">)</span>
<span style="color: #cae682;">revelation</span> <span style="color: #cae682;">=</span>
  <span style="color: #8ac6f2; font-weight: bold;">do</span>
    n <span style="color: #cae682;">&lt;-</span> natural
    <span style="color: #92a65e; font-weight: bold;">V3</span> n 0 0 <span style="color: #cae682;">&lt;$</span> string <span style="color: #95e454;">"red"</span>
      <span style="color: #cae682;">&lt;|&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> 0 n 0 <span style="color: #cae682;">&lt;$</span> string <span style="color: #95e454;">"green"</span>
      <span style="color: #cae682;">&lt;|&gt;</span> <span style="color: #92a65e; font-weight: bold;">V3</span> 0 0 n <span style="color: #cae682;">&lt;$</span> string <span style="color: #95e454;">"blue"</span>
</pre>
</div>

<p>
The <code>Monad</code> instance, however, enables the following.
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="org426ea09"><span style="color: #cae682;">revelation</span> <span style="color: #cae682;">::</span> <span style="color: #92a65e; font-weight: bold;">Parser</span> <span style="color: #8c8c8c;">(</span><span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #92a65e; font-weight: bold;">Integer</span><span style="color: #8c8c8c;">)</span>
<span style="color: #cae682;">revelation</span> <span style="color: #cae682;">=</span>
  natural <span style="color: #cae682;">&gt;&gt;=</span> <span style="color: #cae682;">\</span>n <span style="color: #cae682;">-&gt;</span>
    for <span style="color: #8c8c8c;">(</span><span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #95e454;">"red"</span> <span style="color: #95e454;">"green"</span> <span style="color: #95e454;">"blue"</span><span style="color: #8c8c8c;">)</span> <span style="color: #cae682;">$</span> <span style="color: #cae682;">\</span>color <span style="color: #cae682;">-&gt;</span>
      n <span style="color: #cae682;">&lt;$</span> string color <span style="color: #cae682;">&lt;|&gt;</span> pure 0
</pre>
</div>

<p>
Also delightfully concise is this way of determining which games are possible.
</p>

<div class="org-src-container">
<pre class="src src-haskell" id="org248a5e6"><span style="color: #cae682;">isPossible</span> <span style="color: #cae682;">::</span> <span style="color: #8c8c8c;">[</span><span style="color: #92a65e; font-weight: bold;">V3</span> <span style="color: #92a65e; font-weight: bold;">Integer</span><span style="color: #8c8c8c;">]</span> <span style="color: #cae682;">-&gt;</span> <span style="color: #92a65e; font-weight: bold;">Bool</span>
<span style="color: #cae682;">isPossible</span> <span style="color: #cae682;">=</span> all <span style="color: #8c8c8c;">(</span>and <span style="color: #cae682;">.</span> liftA2 <span style="color: #93a8c6;">(</span><span style="color: #cae682;">&gt;=</span><span style="color: #93a8c6;">)</span> <span style="color: #93a8c6;">(</span><span style="color: #92a65e; font-weight: bold;">V3</span> 12 13 14<span style="color: #93a8c6;">)</span><span style="color: #8c8c8c;">)</span>
</pre>
</div>

</section>
]]></summary>
</entry>

</feed>
